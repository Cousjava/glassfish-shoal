<?xml version="1.0" encoding="iso-8859-1"?>
<!--

    Copyright (c) 2010, 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project name="cache tests" default="all" basedir=".">  

    <!-- ========== Initialize Properties =================================== -->

    <property file="${basedir}/build.properties"/>
    <xmlproperty file="${basedir}/../../pom.xml"/>

    <property name="shoalcachejar" value="${basedir}/../target/shoal-cache.jar"/>
    <!-- all -->
    <target name="all" depends="clean, build"
            description="Build entire ${component.name}">
    </target>

    <!-- build -->
    <target name="build" depends="compile, assembletestjar"
            description="Build entire ${component.name}">
    </target>

    <!-- init. Initialization involves creating publishing directories and
         OS specific targets. -->
    <target name="init" description="${component.name} initialization">
        <tstamp>
            <format property="start.time" pattern="MM/dd/yyyy hh:mm aa"/>
        </tstamp>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <path id="compile.classpath">
        <pathelement location="${grizzly-framework.jar}"/>
        <pathelement location="${grizzly-utils.jar}"/>
        <pathelement location="${shoal-gms.jar}"/>
        <pathelement location="${shoal-gms-tests.jar}"/>
        <pathelement location="${shoalcachejar}"/>
    </path>

    <!-- compile: compile the sources -->
    <target name="compile" depends="init"
            description="Compile ${component.name} sources">

        <javac srcdir="${src.dir}"
               destdir="${classes.dir}"
               debug="${javac.debug}"
               optimize="${javac.optimize}"
               source="${javac.source}"
               target="${javac.source}"
               deprecation="${javac.deprecation}"
               failonerror="true"
               includes="**/*.java"
               >
            <compilerarg value="-Xlint:unchecked"/>
            <classpath>
                <path refid="compile.classpath"/>
            </classpath>
        </javac>

    </target>

    <target name="assembletestjar" description="create ${tests.jar}" >
        <!-- create test jar -->
        <jar jarfile="${dist.dir}/${tests.jar}" update="yes">
            <fileset dir="${classes.dir}" includes="**/*.class"/>
        </jar>
        <jar jarfile="${dist.dir}/${tests.jar}" update="yes">
            <fileset dir="${src.dir}" includes="**/*.java"/>
        </jar>

        <jar jarfile="${dist.dir}/${tests.jar}" update="yes">
            <fileset dir=".." includes="**/*.jar" excludes="**/${tests.jar}" />
            <fileset dir=".." includes="**/*.sh"/>
        </jar>
    </target>

    <!-- clean -->
    <target name="clean">
        <delete dir="${classes.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

</project>
